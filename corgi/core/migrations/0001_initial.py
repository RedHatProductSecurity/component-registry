# Generated by Django 3.2.12 on 2022-04-25 21:51

import uuid

import django.contrib.postgres.fields
import django.contrib.postgres.fields.hstore
import django.contrib.postgres.operations
import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="AppStreamLifeCycle",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("name", models.TextField()),
                (
                    "type",
                    models.CharField(
                        choices=[("module", "Module"), ("package", "Package"), ("scl", "Scl")],
                        default="package",
                        max_length=50,
                    ),
                ),
                ("lifecycle", models.IntegerField()),
                ("acg", models.IntegerField()),
                ("start_date", models.DateField(null=True)),
                ("end_date", models.DateField(null=True)),
                ("product", models.TextField()),
                ("initial_product_version", models.TextField()),
                ("stream", models.TextField()),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("default", "Default"),
                            ("previous_release", "Previous Release"),
                            ("prp", "Prp"),
                            ("confirmed", "Confirmed"),
                            ("override", "Override"),
                        ],
                        max_length=50,
                    ),
                ),
                ("private", models.BooleanField()),
                ("meta_attr", models.JSONField(default=dict)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Channel",
            fields=[
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.TextField(unique=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CDN_REPO", "Cdn Repo"),
                            ("CONTAINER_REGISTRY", "Container Registry"),
                        ],
                        max_length=50,
                    ),
                ),
                ("description", models.TextField(default="")),
                ("meta_attr", models.JSONField(default=dict)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Component",
            fields=[
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("tags", models.JSONField(default=dict)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.TextField()),
                ("description", models.TextField()),
                ("meta_attr", models.JSONField(default=dict)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("CONTAINER_IMAGE", "Container Image"),
                            ("GOLANG", "Golang"),
                            ("MAVEN", "Maven"),
                            ("NPM", "Npm"),
                            ("RHEL_MODULE", "Rhel Module"),
                            ("RPM", "Rpm"),
                            ("SRPM", "Srpm"),
                            ("PYPI", "Pypi"),
                            ("UNKNOWN", "Unknown"),
                            ("UPSTREAM", "Upstream"),
                        ],
                        max_length=20,
                    ),
                ),
                ("version", models.CharField(max_length=1024)),
                ("release", models.CharField(default="", max_length=1024)),
                ("arch", models.CharField(default="", max_length=1024)),
                ("purl", models.CharField(default="", max_length=1024)),
                (
                    "products",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "product_versions",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "product_streams",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "product_variants",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "channels",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "provides",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=1024), default=list, size=None
                    ),
                ),
                (
                    "sources",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=1024), default=list, size=None
                    ),
                ),
                (
                    "upstream",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=1024), default=list, size=None
                    ),
                ),
            ],
            options={
                "verbose_name": "Component(<class 'type'>)",
                "ordering": ("type", "name"),
            },
        ),
        migrations.CreateModel(
            name="ComponentNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("object_id", models.UUIDField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("SOURCE", "Source"),
                            ("REQUIRES", "Requires"),
                            ("PROVIDES", "Provides"),
                        ],
                        default="SOURCE",
                        max_length=20,
                    ),
                ),
                ("purl", models.CharField(default="", max_length=1024)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Compose",
            fields=[
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("tags", models.JSONField(default=dict)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("meta_attr", models.JSONField(default=dict)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Erratum",
            fields=[
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("tags", models.JSONField(default=dict)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("meta_attr", models.JSONField(default=dict)),
                ("erratum_id", models.CharField(default=list, max_length=200)),
                ("variant_id", models.CharField(default=list, max_length=200)),
                ("build_id", models.CharField(default=list, max_length=200)),
            ],
            options={
                "verbose_name": "Erratum",
                "verbose_name_plural": "Errata",
                "ordering": ("erratum_id",),
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("tags", models.JSONField(default=dict)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.TextField(unique=True)),
                ("description", models.TextField(default="")),
                ("version", models.CharField(default="", max_length=1024)),
                ("meta_attr", models.JSONField(default=dict)),
                (
                    "product_versions",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "product_streams",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "product_variants",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "channels",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductStream",
            fields=[
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("tags", models.JSONField(default=dict)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.TextField(unique=True)),
                ("description", models.TextField(default="")),
                ("version", models.CharField(default="", max_length=1024)),
                ("meta_attr", models.JSONField(default=dict)),
                ("cpe", models.CharField(default="", max_length=1000)),
                (
                    "products",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "product_versions",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "product_variants",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "channels",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("tags", models.JSONField(default=dict)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.TextField(unique=True)),
                ("description", models.TextField(default="")),
                ("version", models.CharField(default="", max_length=1024)),
                ("meta_attr", models.JSONField(default=dict)),
                ("cpe", models.CharField(default="", max_length=1000)),
                (
                    "products",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "product_versions",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "product_streams",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "channels",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductVersion",
            fields=[
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("tags", models.JSONField(default=dict)),
                (
                    "uuid",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("name", models.TextField(unique=True)),
                ("description", models.TextField(default="")),
                ("version", models.CharField(default="", max_length=1024)),
                ("meta_attr", models.JSONField(default=dict)),
                (
                    "products",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "product_streams",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "product_variants",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
                (
                    "channels",
                    django.contrib.postgres.fields.ArrayField(
                        base_field=models.CharField(max_length=200), default=list, size=None
                    ),
                ),
            ],
            options={
                "ordering": ["name"],
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="SoftwareBuild",
            fields=[
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("tags", models.JSONField(default=dict)),
                ("build_id", models.IntegerField(primary_key=True, serialize=False)),
                (
                    "type",
                    models.CharField(
                        choices=[("BREW", "Brew"), ("PNC", "Pnc"), ("KOJI", "Koji")], max_length=20
                    ),
                ),
                ("name", models.TextField()),
                ("meta_attr", models.JSONField(default=dict)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductNode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("last_changed", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("object_id", models.UUIDField()),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="contenttypes.contenttype"
                    ),
                ),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="core.productnode",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddConstraint(
            model_name="erratum",
            constraint=models.UniqueConstraint(
                fields=("erratum_id", "variant_id", "build_id"), name="unique_errata"
            ),
        ),
        migrations.AddField(
            model_name="componentnode",
            name="content_type",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="contenttypes.contenttype"
            ),
        ),
        migrations.AddField(
            model_name="componentnode",
            name="parent",
            field=mptt.fields.TreeForeignKey(
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="children",
                to="core.componentnode",
            ),
        ),
        migrations.AddField(
            model_name="component",
            name="software_build",
            field=models.ForeignKey(
                null=True, on_delete=django.db.models.deletion.CASCADE, to="core.softwarebuild"
            ),
        ),
        migrations.AddConstraint(
            model_name="appstreamlifecycle",
            constraint=models.UniqueConstraint(
                fields=("name", "type", "product", "initial_product_version", "stream"),
                name="unique_lifecycle_entity",
            ),
        ),
        migrations.AddConstraint(
            model_name="component",
            constraint=models.UniqueConstraint(
                fields=("name", "type", "arch", "version", "release"), name="unique_components"
            ),
        ),
        migrations.AlterField(
            model_name="component",
            name="type",
            field=models.CharField(
                choices=[
                    ("CONTAINER_IMAGE", "Container Image"),
                    ("GOLANG", "Golang"),
                    ("MAVEN", "Maven"),
                    ("NPM", "Npm"),
                    ("RHEL_MODULE", "Rhel Module"),
                    ("RPM", "Rpm"),
                    ("SRPM", "Srpm"),
                    ("PYPI", "Pypi"),
                    ("UNKNOWN", "Unknown"),
                    ("UPSTREAM", "Upstream"),
                ],
                max_length=20,
            ),
        ),
        migrations.AlterField(
            model_name="componentnode",
            name="type",
            field=models.CharField(
                choices=[
                    ("SOURCE", "Source"),
                    ("REQUIRES", "Requires"),
                    ("PROVIDES", "Provides"),
                    ("PROVIDES_DEV", "Provides Dev"),
                ],
                default="SOURCE",
                max_length=20,
            ),
        ),
    ]

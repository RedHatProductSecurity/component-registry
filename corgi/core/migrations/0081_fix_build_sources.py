# Generated by Django 3.2.18 on 2023-06-19 02:18

import os

from django.db import migrations
from django.db.models import Value, functions


def fix_build_source_urls(apps, schema_editor):
    """Convert git:// links to https:// links so OpenLCS use of dist-git doesn't break"""
    SoftwareBuild = apps.get_model("core", "SoftwareBuild")

    # It's an internal hostname, so we have to get it a little indirectly
    dist_git_hostname = os.environ["CORGI_LOOKASIDE_CACHE_URL"]
    dist_git_hostname = dist_git_hostname.replace("https://", "", 1)
    dist_git_hostname = dist_git_hostname.replace("/repo", "", 1)

    # Find any build where the source URL starts with git:// or similar
    # Not using a Q() since it makes the logic below more complicated
    gitlike_urls = (
        f"git://{dist_git_hostname}/",
        f"git+http://{dist_git_hostname}/",
        f"git+https://{dist_git_hostname}/",
        f"git+ssh://{dist_git_hostname}/",
    )
    # Replace it with https:// and add "/git/" if not already present
    dist_git_value = Value(f"https://{dist_git_hostname}/git/")

    for git_url in gitlike_urls:
        # Always use https:// instead of git:// or similar
        builds_to_update = SoftwareBuild.objects.filter(source__startswith=git_url)
        git_url_with_path = f"{git_url}git/"

        # If "/git/" is already present, just fix the scheme
        builds_with_git = builds_to_update.filter(source__startswith=git_url_with_path)
        builds_with_git.update(
            source=functions.Replace("source", Value(git_url_with_path), dist_git_value)
        )

        # If "/git/" isn't already present, fix the scheme and path
        builds_without_git = builds_to_update.exclude(source__startswith=git_url_with_path)
        builds_without_git.update(
            source=functions.Replace("source", Value(git_url), dist_git_value)
        )

        # Handle .git suffix which must be removed in HTTPS URLs
        builds_to_update.filter(source__contains=".git").update(
            source=functions.Replace("source", Value(".git"))
        )


class Migration(migrations.Migration):

    dependencies = [
        ("core", "0080_adjust_product_cpe_fields"),
    ]

    operations = [
        migrations.RunPython(fix_build_source_urls),
    ]

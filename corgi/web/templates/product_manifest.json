{# ProductModel manifest, obj is a ProductModel subclass here #}
{% extends "base_manifest.json" %}
{% block packages %}
{% for component in latest_components %}{# Below will eventually become component.manifest #}
        {% include "package_manifest.json" %}
        {% for provided in component.provides_queryset %}
            {% include "package_manifest.json" with component=provided %}
        {% endfor %}
    {% endfor %}
    {
        "copyrightText": "NOASSERTION",
        "downloadLocation": "NOASSERTION",
        "externalRefs": [{% for cpe in obj.cpes %}
            {
                "referenceCategory": "SECURITY",
                "referenceLocator": "{{cpe}}",
                "referenceType": "cpe22Type"
            },{% endfor %}
            {{# We report ofuri since it can be used to link and compare two manifests for the same product, like CPE #}
                "referenceCategory": "SECURITY",
                "referenceLocator": "cpe:/{{obj.ofuri}}",
                "referenceType": "cpe22Type"
            }
        ],
        "filesAnalyzed": false,
        "homepage": {% if obj.lifecycle_url %}"{{obj.lifecycle_url}}"{% else %}"https://www.redhat.com/"{% endif %},
        "licenseComments": "Red Hat cannot providing licensing information for products in our manifests at this time.",
        "licenseConcluded": "NOASSERTION",
        "licenseDeclared": "NOASSERTION",
        "name": "{{obj.name}}",
        "packageFileName": "NOASSERTION",
        "SPDXID": "SPDXRef-{{obj.uuid}}",
        "supplier": "Organization: Red Hat",
        "versionInfo": "{{obj.version}}"
    }
{% endblock %}{% block relationships %}{% for component in latest_components %}{% for node_type, node_id in component.get_provides_nodes_queryset %}
        {
          "relatedSpdxElement": "SPDXRef-{{component.uuid}}",{# subcomponent is built from, or contained in, component #}
          "relationshipType": {% if node_type == "PROVIDES_DEV" %}"DEV_DEPENDENCY_OF"{% else %}"CONTAINED_BY"{% endif %},
          "spdxElementId": "SPDXRef-{{node_id}}"
        },
        {
          "relatedSpdxElement": "NONE",{# subcomponent is a leaf node #}
          "relationshipType": "CONTAINS",
          "spdxElementId": "SPDXRef-{{node_id}}"
        },{% endfor %}
        {
          "relatedSpdxElement": "SPDXRef-{{obj.uuid}}",
          "relationshipType": "PACKAGE_OF",
          "spdxElementId": "SPDXRef-{{component.uuid}}"
        },
    {% endfor %}
{% endblock %}
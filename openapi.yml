openapi: 3.0.3
info:
  title: Component Registry API
  version: 1.3.8
  description: REST API auto-generated docs for Component Registry
paths:
  /api/authentication_status:
    get:
      operationId: authentication_status_retrieve
      description: View to determine whether you are currently authenticated and,
        if so, as whom.
      tags:
      - authentication_status
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  oidc_enabled:
                    type: string
                  user:
                    type: string
                  auth:
                    type: string
          description: ''
  /api/controlled_access_test:
    get:
      operationId: controlled_access_test_retrieve
      description: |-
        View to determine whether you are authenticated with an account that has a specific
        role.
      tags:
      - controlled_access_test
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
          description: ''
  /api/healthy:
    get:
      operationId: healthy_retrieve
      description: Send empty 200 response as an indicator that the application is
        up and running.
      tags:
      - healthy
      responses:
        '200':
          description: No response body
  /api/token_auth_test:
    get:
      operationId: token_auth_test_retrieve
      description: View to test authentication with DRF Tokens.
      tags:
      - token_auth_test
      security:
      - tokenAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
          description: ''
    post:
      operationId: token_auth_test_create
      description: View to test authentication with DRF Tokens.
      tags:
      - token_auth_test
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: string
          description: ''
        '401':
          description: No response body
  /api/v1/builds:
    get:
      operationId: v1_builds_list
      description: View for api/v1/builds
      parameters:
      - in: query
        name: build_id
        schema:
          type: string
      - in: query
        name: build_type
        schema:
          type: string
          enum:
          - APP_INTERFACE
          - BREW
          - CENTOS
          - KOJI
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: integer
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedSoftwareBuildList'
          description: ''
  /api/v1/builds/{uuid}:
    get:
      operationId: v1_builds_retrieve
      description: View for api/v1/builds
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this software build.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SoftwareBuild'
          description: ''
  /api/v1/channels:
    get:
      operationId: v1_channels_list
      description: View for api/v1/channels
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: type
        schema:
          type: string
          enum:
          - CDN_REPO
          - CONTAINER_REGISTRY
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedChannelList'
          description: ''
  /api/v1/channels/{uuid}:
    get:
      operationId: v1_channels_retrieve
      description: View for api/v1/channels
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this channel.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Channel'
          description: ''
  /api/v1/components:
    get:
      operationId: v1_components_list
      description: View for api/v1/components
      parameters:
      - in: query
        name: arch
        schema:
          type: string
      - in: query
        name: channels
        schema:
          type: string
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: el_match
        schema:
          type: string
        description: RHEL version for layered products
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: gomod_components
        schema:
          type: boolean
        description: Show only gomod components, hide go-packages
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - in: query
        name: latest_components_by_streams
        schema:
          type: boolean
        description: Show only latest components across product streams
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: missing_copyright
        schema:
          type: boolean
        description: Show only unscanned components (where copyright text is empty)
      - in: query
        name: missing_license
        schema:
          type: boolean
        description: Show only unscanned components (where license concluded is empty)
      - in: query
        name: missing_scan_url
        schema:
          type: boolean
        description: Show only unscanned components (where OpenLCS scan URL is empty)
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: namespace
        schema:
          type: string
          enum:
          - REDHAT
          - UPSTREAM
      - in: query
        name: nevra
        schema:
          type: string
      - in: query
        name: nvr
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: ofuri
        schema:
          type: string
      - in: query
        name: product_streams
        schema:
          type: string
      - in: query
        name: product_variants
        schema:
          type: string
      - in: query
        name: product_versions
        schema:
          type: string
      - in: query
        name: products
        schema:
          type: string
      - in: query
        name: provides
        schema:
          type: string
      - in: query
        name: purl
        schema:
          type: string
      - in: query
        name: re_name
        schema:
          type: string
      - in: query
        name: re_provides
        schema:
          type: string
      - in: query
        name: re_purl
        schema:
          type: string
      - in: query
        name: re_sources
        schema:
          type: string
      - in: query
        name: re_upstreams
        schema:
          type: string
      - in: query
        name: related_url
        schema:
          type: string
      - in: query
        name: release
        schema:
          type: string
      - in: query
        name: released_components
        schema:
          type: boolean
        description: Show only released components
      - in: query
        name: root_components
        schema:
          type: boolean
        description: Show only root components (source RPMs, index container images)
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: sources
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: integer
      - in: query
        name: type
        schema:
          type: string
          enum:
          - CARGO
          - GEM
          - GENERIC
          - GITHUB
          - GOLANG
          - MAVEN
          - NPM
          - OCI
          - PYPI
          - RPM
          - RPMMOD
      - in: query
        name: upstreams
        schema:
          type: string
      - in: query
        name: version
        schema:
          type: string
      - in: query
        name: view
        schema:
          type: string
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedComponentList'
          description: ''
  /api/v1/components/{uuid}:
    get:
      operationId: v1_components_retrieve
      description: View for api/v1/components
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this component.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: ''
  /api/v1/components/{uuid}/manifest:
    get:
      operationId: v1_components_manifest_retrieve
      description: View for api/v1/components
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this component.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: ''
  /api/v1/components/{uuid}/provides:
    get:
      operationId: v1_components_provides_retrieve
      description: View for api/v1/components
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this component.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: ''
  /api/v1/components/{uuid}/taxonomy:
    get:
      operationId: v1_components_taxonomy_retrieve
      description: View for api/v1/components
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this component.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: ''
  /api/v1/components/{uuid}/update_license:
    put:
      operationId: v1_components_update_license_update
      description: Allow OpenLCS to upload copyright text / license scan results for
        a component
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this component.
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Component'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Component'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Component'
      security:
      - tokenAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Component'
          description: ''
  /api/v1/product_streams:
    get:
      operationId: v1_product_streams_list
      description: View for api/v1/product_streams
      parameters:
      - in: query
        name: active
        schema:
          type: string
      - in: query
        name: channels
        schema:
          type: string
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: product_streams
        schema:
          type: string
      - in: query
        name: product_variants
        schema:
          type: string
      - in: query
        name: product_versions
        schema:
          type: string
      - in: query
        name: products
        schema:
          type: string
      - in: query
        name: re_name
        schema:
          type: string
      - in: query
        name: re_ofuri
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: integer
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductStreamList'
          description: ''
  /api/v1/product_streams/{uuid}:
    get:
      operationId: v1_product_streams_retrieve
      description: View for api/v1/product_streams
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product stream.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductStream'
          description: ''
  /api/v1/product_streams/{uuid}/manifest:
    get:
      operationId: v1_product_streams_manifest_retrieve
      description: View for api/v1/product_streams
      parameters:
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product stream.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductStream'
          description: ''
  /api/v1/product_variants:
    get:
      operationId: v1_product_variants_list
      description: View for api/v1/product_variants
      parameters:
      - in: query
        name: channels
        schema:
          type: string
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: product_streams
        schema:
          type: string
      - in: query
        name: product_variants
        schema:
          type: string
      - in: query
        name: product_versions
        schema:
          type: string
      - in: query
        name: products
        schema:
          type: string
      - in: query
        name: re_name
        schema:
          type: string
      - in: query
        name: re_ofuri
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: integer
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductVariantList'
          description: ''
  /api/v1/product_variants/{uuid}:
    get:
      operationId: v1_product_variants_retrieve
      description: View for api/v1/product_variants
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product variant.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVariant'
          description: ''
  /api/v1/product_versions:
    get:
      operationId: v1_product_versions_list
      description: View for api/v1/product_versions
      parameters:
      - in: query
        name: channels
        schema:
          type: string
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: product_streams
        schema:
          type: string
      - in: query
        name: product_variants
        schema:
          type: string
      - in: query
        name: product_versions
        schema:
          type: string
      - in: query
        name: products
        schema:
          type: string
      - in: query
        name: re_name
        schema:
          type: string
      - in: query
        name: re_ofuri
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: integer
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductVersionList'
          description: ''
  /api/v1/product_versions/{uuid}:
    get:
      operationId: v1_product_versions_retrieve
      description: View for api/v1/product_versions
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product version.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductVersion'
          description: ''
  /api/v1/products:
    get:
      operationId: v1_products_list
      description: View for api/v1/products
      parameters:
      - in: query
        name: channels
        schema:
          type: string
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: product_streams
        schema:
          type: string
      - in: query
        name: product_variants
        schema:
          type: string
      - in: query
        name: product_versions
        schema:
          type: string
      - in: query
        name: products
        schema:
          type: string
      - in: query
        name: re_name
        schema:
          type: string
      - in: query
        name: re_ofuri
        schema:
          type: string
      - name: search
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: tags
        schema:
          type: integer
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedProductList'
          description: ''
  /api/v1/products/{uuid}:
    get:
      operationId: v1_products_retrieve
      description: View for api/v1/products
      parameters:
      - in: query
        name: exclude_fields
        schema:
          type: array
          items:
            type: string
        description: 'Exclude only specified fields in the response. Multiple values
          may be separated by commas. Example: `exclude_fields=software_build.build_id,name`'
      - in: query
        name: include_fields
        schema:
          type: array
          items:
            type: string
        description: 'Include only specified fields in the response. Multiple values
          may be separated by commas. Example: `include_fields=software_build.build_id,name`'
      - in: path
        name: uuid
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this product.
        required: true
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/v1/schema:
    get:
      operationId: v1_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      tags:
      - v1
      security:
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/status:
    get:
      operationId: v1_status_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - v1
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=400&limit=100
                  previous:
                    type: string
                    nullable: true
                    format: uri
                    example: http://api.example.org/accounts/?offset=200&limit=100
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        status:
                          type: string
                        dt:
                          type: string
                          format: date-time
                        service_version:
                          type: string
                        rest_api_version:
                          type: string
                        db_size:
                          type: string
                        builds:
                          type: object
                          properties:
                            count:
                              type: integer
                        products:
                          type: object
                          properties:
                            count:
                              type: integer
                        product_versions:
                          type: object
                          properties:
                            count:
                              type: integer
                        product_streams:
                          type: object
                          properties:
                            count:
                              type: integer
                        product_variants:
                          type: object
                          properties:
                            count:
                              type: integer
                        channels:
                          type: object
                          properties:
                            count:
                              type: integer
                        components:
                          type: object
                          properties:
                            count:
                              type: integer
                        relations:
                          type: object
                          properties:
                            count:
                              type: integer
          description: ''
components:
  schemas:
    Channel:
      type: object
      description: |-
        Show detailed information for Channel(s).
        Add or remove fields using ?include_fields=&exclude_fields=
      properties:
        link:
          type: string
          readOnly: true
        products:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_versions:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_streams:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_variants:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
      required:
      - link
      - product_streams
      - product_variants
      - product_versions
      - products
    Component:
      type: object
      description: |-
        Show detailed information for a Component.
        Add or remove fields using ?include_fields=&exclude_fields=
      properties:
        software_build:
          allOf:
          - $ref: '#/components/schemas/SoftwareBuildSummary'
          readOnly: true
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        link:
          type: string
          readOnly: true
        products:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_versions:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_streams:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_variants:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        channels:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        provides:
          type: string
          readOnly: true
        sources:
          type: string
          readOnly: true
        upstreams:
          type: string
          readOnly: true
        manifest:
          type: string
          readOnly: true
      required:
      - channels
      - link
      - manifest
      - product_streams
      - product_variants
      - product_versions
      - products
      - provides
      - software_build
      - sources
      - tags
      - upstreams
    PaginatedChannelList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Channel'
    PaginatedComponentList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Component'
    PaginatedProductList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/Product'
    PaginatedProductStreamList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductStream'
    PaginatedProductVariantList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
    PaginatedProductVersionList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ProductVersion'
    PaginatedSoftwareBuildList:
      type: object
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/SoftwareBuild'
    Product:
      type: object
      description: |-
        Show detailed information for Product(s).
        Add or remove fields using ?include_fields=&exclude_fields=
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        components:
          type: string
          readOnly: true
        upstreams:
          type: string
          readOnly: true
        builds:
          type: string
          readOnly: true
        link:
          type: string
          readOnly: true
        build_count:
          type: integer
          readOnly: true
        channels:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_versions:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_streams:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_variants:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
      required:
      - build_count
      - builds
      - channels
      - components
      - link
      - product_streams
      - product_variants
      - product_versions
      - tags
      - upstreams
    ProductStream:
      type: object
      description: |-
        Show detailed information for ProductStream(s).
        Add or remove fields using ?include_fields=&exclude_fields=
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        components:
          type: string
          readOnly: true
        upstreams:
          type: string
          readOnly: true
        builds:
          type: string
          readOnly: true
        link:
          type: string
          readOnly: true
        build_count:
          type: integer
          readOnly: true
        channels:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        manifest:
          type: string
          readOnly: true
        products:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_versions:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_variants:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        relations:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
      required:
      - build_count
      - builds
      - channels
      - components
      - link
      - manifest
      - product_variants
      - product_versions
      - products
      - relations
      - tags
      - upstreams
    ProductVariant:
      type: object
      description: |-
        Show detailed information for ProductVariant(s).
        Add or remove fields using ?include_fields=&exclude_fields=
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        components:
          type: string
          readOnly: true
        upstreams:
          type: string
          readOnly: true
        builds:
          type: string
          readOnly: true
        link:
          type: string
          readOnly: true
        build_count:
          type: integer
          readOnly: true
        channels:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        products:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_versions:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_streams:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        relations:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
      required:
      - build_count
      - builds
      - channels
      - components
      - link
      - product_streams
      - product_versions
      - products
      - relations
      - tags
      - upstreams
    ProductVersion:
      type: object
      description: |-
        Show detailed information for ProductVersion(s).
        Add or remove fields using ?include_fields=&exclude_fields=
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        components:
          type: string
          readOnly: true
        upstreams:
          type: string
          readOnly: true
        builds:
          type: string
          readOnly: true
        link:
          type: string
          readOnly: true
        build_count:
          type: integer
          readOnly: true
        channels:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        products:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_streams:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
        product_variants:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
      required:
      - build_count
      - builds
      - channels
      - components
      - link
      - product_streams
      - product_variants
      - products
      - tags
      - upstreams
    SoftwareBuild:
      type: object
      description: |-
        Show detailed information for SoftwareBuild(s).
        Add or remove fields using ?include_fields=&exclude_fields=
      properties:
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          readOnly: true
        link:
          type: string
          readOnly: true
        web_url:
          type: string
          readOnly: true
        components:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
          readOnly: true
      required:
      - components
      - link
      - tags
      - web_url
    SoftwareBuildSummary:
      type: object
      description: |-
        Show summary information for a SoftwareBuild.
        Add or remove fields using ?include_fields=&exclude_fields=
      properties:
        link:
          type: string
          readOnly: true
      required:
      - link
    Tag:
      type: object
      properties:
        name:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        value:
          type: string
          default: ''
          maxLength: 1024
        created_at:
          type: string
          format: date-time
          readOnly: true
      required:
      - created_at
      - name
  securitySchemes:
    tokenAuth:
      type: apiKey
      in: header
      name: Authorization
      description: Token-based authentication with required prefix "Token"
